# Generated by Django 5.2 on 2025-04-20 07:13

import django.db.models.deletion
import uuid
from django.db import migrations, models
import json

def convert_string_to_json(apps, schema_editor):
    # Get the Paper model from the app registry
    Paper = apps.get_model('public_api', 'Paper')
    
    # Loop through all papers
    for paper in Paper.objects.all():
        # Convert authors string to JSON if needed
        if isinstance(paper.authors, str):
            try:
                # Try to parse existing JSON
                json.loads(paper.authors)
            except (json.JSONDecodeError, TypeError):
                # Convert comma-separated string to JSON array
                if ',' in paper.authors:
                    authors_list = [name.strip() for name in paper.authors.split(',')]
                else:
                    authors_list = [paper.authors.strip()]
                paper.authors = json.dumps(authors_list)
        
        # Convert keywords string to JSON if needed
        if isinstance(paper.keywords, str):
            try:
                # Try to parse existing JSON
                json.loads(paper.keywords)
            except (json.JSONDecodeError, TypeError):
                # Convert comma-separated string to JSON array
                if ',' in paper.keywords:
                    keywords_list = [kw.strip() for kw in paper.keywords.split(',')]
                else:
                    keywords_list = [paper.keywords.strip()]
                paper.keywords = json.dumps(keywords_list)
        
        paper.save()

class Migration(migrations.Migration):
    dependencies = [
        ("public_api", "0005_auto_20250420_0332"),
    ]

    operations = [
        # First run the data migration
        migrations.RunPython(convert_string_to_json),
        
        migrations.CreateModel(
            name="Conference",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
                ("abbreviation", models.CharField(blank=True, max_length=50)),
                ("rank", models.CharField(blank=True, max_length=10)),
                ("location", models.CharField(blank=True, max_length=255)),
                ("url", models.URLField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="Journal",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
                ("abbreviation", models.CharField(blank=True, max_length=50)),
                ("impact_factor", models.FloatField(blank=True, null=True)),
                ("quartile", models.CharField(blank=True, max_length=10)),
                ("publisher", models.CharField(blank=True, max_length=255)),
                ("url", models.URLField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.AlterField(
            model_name="paper",
            name="authors",
            field=models.JSONField(default=list),
        ),
        migrations.AlterField(
            model_name="paper",
            name="keywords",
            field=models.JSONField(default=list),
        ),
        migrations.AddField(
            model_name="paper",
            name="conference_venue",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="papers",
                to="public_api.conference",
            ),
        ),
        migrations.AddField(
            model_name="paper",
            name="journal",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="papers",
                to="public_api.journal",
            ),
        ),
    ]
